#!/usr/bin/env ruby

require "bundler/setup"

# require dependencies from gemspec
require "active_record"
require "aws-sdk-s3"
require "paranoia"
require "pp"
require "yaml"
dbspec_location = "bin/dbspec.yml"
if File.exist? dbspec_location
  dbspec = YAML.load_file(dbspec_location)
  ActiveRecord::Base.establish_connection(dbspec)
  ActiveRecord::Base.connection
end

require "batch_archiving"

storage_options = YAML.load_file("config/batch_archiving_rspec.yml")
::BatchArchiving::Storage.configure(storage: :aws_s3, storage_options: storage_options)

class Example < ActiveRecord::Base
  batch_archivable
  acts_as_paranoid
end

def create_examples(count, start: 0, deleted: true)
  (1..count).each do |n|
    Example.create(content: "example: #{n}", created_at: (n+start).hours.ago, deleted_at: Time.now)
  end
end

require "irb"
IRB.start(__FILE__)
